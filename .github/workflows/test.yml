name: Node.js CI

on:
  push:
    branches: [ master ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: usergraphs-back    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: app-deployment # Add your deployment name here.
  IMAGE: vovchikvoin/usergraphs_back

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm test
      - run: echo ${GITHUB_SHA}
#      - run: echo ${{GITHUB_SHA}}
      - run: echo $GITHUB_SHA

  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
            credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
#        with:
#          service_account_key: ${{ secrets.GKE_SA_KEY }}
#          project_id: ${{ secrets.GKE_PROJECT }}

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/${IMAGE}:${GITHUB_SHA}" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/${IMAGE}:${GITHUB_SHA}"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Pre
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Deploy
        run: |-
          kubectl cluster-info
          sed -i 's/vovchikvoin\/usergraphs_back:v1.0.0/'"gcr.io\/$PROJECT_ID\/${IMAGE}:$GITHUB_SHA"'/' k8s/app.deployment.yml
          kubectl apply -f k8s
          kubectl rollout status deployment/${DEPLOYMENT_NAME}
          kubectl get services -o wide
